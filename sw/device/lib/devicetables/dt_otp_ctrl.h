// Copyright lowRISC contributors.
// Licensed under the Apache License, Version 2.0, see LICENSE for details.
// SPDX-License-Identifier: Apache-2.0
//
// Device table API auto-generated by `reggen`

#ifndef OPENTITAN_SW_DEVICE_LIB_DEVICETABLES_DT_OTP_CTRL_H_
#define OPENTITAN_SW_DEVICE_LIB_DEVICETABLES_DT_OTP_CTRL_H_

#include <stdint.h>

#include "sw/device/lib/devicetables/dt.h"

typedef enum {
  kDtOtpCtrlRegBlockCore = 0,
  kDtOtpCtrlRegBlockPrim = 1,
  kDtOtpCtrlRegBlockCount = 2,
} dt_otp_ctrl_reg_block_t;

typedef enum {
  kDtOtpCtrlIrqTypeOtpOperationDone = 0,
  kDtOtpCtrlIrqTypeOtpError = 1,
  kDtOtpCtrlIrqTypeCount = 2,
} dt_otp_ctrl_irq_type_t;

typedef enum {
  kDtOtpCtrlClockClk = 0,
  kDtOtpCtrlClockEdn = 1,
  kDtOtpCtrlClockCount = 2,
} dt_otp_ctrl_clock_t;

typedef enum {
  kDtOtpCtrlPinctrlOutputTest0 = 0,
  kDtOtpCtrlPinctrlOutputTest1 = 1,
  kDtOtpCtrlPinctrlOutputTest2 = 2,
  kDtOtpCtrlPinctrlOutputTest3 = 3,
  kDtOtpCtrlPinctrlOutputTest4 = 4,
  kDtOtpCtrlPinctrlOutputTest5 = 5,
  kDtOtpCtrlPinctrlOutputTest6 = 6,
  kDtOtpCtrlPinctrlOutputTest7 = 7,
  kDtOtpCtrlPinctrlInputCount = 0,
  kDtOtpCtrlPinctrlOutputCount = 8,
} dt_otp_ctrl_pinctrl_t;

typedef struct dt_otp_ctrl {
  dt_device_t device;
  uint32_t base_addrs[kDtOtpCtrlRegBlockCount];
  uint32_t irqs[kDtOtpCtrlIrqTypeCount];
  dt_clock_t clocks[kDtOtpCtrlClockCount];
} dt_otp_ctrl_t;

/**
 * Convert a global IRQ ID to a local otp_ctrl IRQ type.
 *
 * @param dt Pointer to an instance of otp_ctrl.
 * @param irq A global IRQ ID.
 * @return The local otp_ctrl IRQ type of this irq.
 *
 * IMPORTANT This function assumes that the global IRQ belongs to the instance
 * of otp_ctrl passed in parameter. In other words, it must the case that
 * `dt->device == dt_irq_to_device(irq)`
 *
 * FIXME How should we handle errors (when the invariant above is violated)?
 */
static inline dt_otp_ctrl_irq_type_t dt_otp_ctrl_irq_type(
    const dt_otp_ctrl_t *dt, dt_irq_t irq) {
  // FIXME Should check that irq >= dt->irqs[0] and irq < dt->irqs[0] +
  // kDtOtpCtrlIrqTypeCount
  return irq - dt->irqs[0];
}

#endif  // OPENTITAN_SW_DEVICE_LIB_DEVICETABLES_DT_OTP_CTRL_H_
