// Copyright lowRISC contributors.
// Licensed under the Apache License, Version 2.0, see LICENSE for details.
// SPDX-License-Identifier: Apache-2.0
//
// Device table API auto-generated by `reggen`

#ifndef OPENTITAN_SW_DEVICE_LIB_DEVICETABLES_DT_PWM_H_
#define OPENTITAN_SW_DEVICE_LIB_DEVICETABLES_DT_PWM_H_

#include <stdint.h>

#include "sw/device/lib/devicetables/dt_api.h"

typedef enum {
  kDtPwmRegBlockCore = 0,
  kDtPwmRegBlockCount = 1,
} dt_pwm_reg_block_t;

typedef enum {
  kDtPwmClockClk = 0,
  kDtPwmClockCore = 1,
  kDtPwmClockCount = 2,
} dt_pwm_clock_t;

typedef enum {
  kDtPwmPinPwm0 = 0,
  kDtPwmPinPwm1 = 1,
  kDtPwmPinPwm2 = 2,
  kDtPwmPinPwm3 = 3,
  kDtPwmPinPwm4 = 4,
  kDtPwmPinPwm5 = 5,
  kDtPwmPinCount = 6,
} dt_pwm_pinctrl_t;

typedef struct dt_pwm {
  dt_device_id_t device_id;
  uint32_t base_addrs[kDtPwmRegBlockCount];
  dt_clock_t clocks[kDtPwmClockCount];
  dt_pin_t pins[kDtPwmPinCount];
} dt_pwm_t;

#endif  // OPENTITAN_SW_DEVICE_LIB_DEVICETABLES_DT_PWM_H_
