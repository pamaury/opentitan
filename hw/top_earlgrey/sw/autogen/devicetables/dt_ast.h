// Copyright lowRISC contributors.
// Licensed under the Apache License, Version 2.0, see LICENSE for details.
// SPDX-License-Identifier: Apache-2.0
//
// Device table API auto-generated by `reggen`

#ifndef OPENTITAN_HW_TOP_EARLGREY_SW_AUTOGEN_DEVICETABLES_DT_AST_H_
#define OPENTITAN_HW_TOP_EARLGREY_SW_AUTOGEN_DEVICETABLES_DT_AST_H_

#include "sw/device/lib/devicetables/dt.h"
#include <stdint.h>

typedef enum {
  kDtAstRegBlockCore = 0,
  kDtAstRegBlockCount = 1,
} dt_ast_reg_block_t;

typedef enum {
  kDtAstClockAstTlul = 0,
  kDtAstClockAstAdc = 1,
  kDtAstClockAstAlert = 2,
  kDtAstClockAstEs = 3,
  kDtAstClockAstRng = 4,
  kDtAstClockAstUsb = 5,
  kDtAstClockCount = 6,
} dt_ast_clock_t;

typedef enum {
  kDtAstPinctrlInputCount = 0,
  kDtAstPinctrlOutputCount = 0,
} dt_ast_pinctrl_t;

typedef struct dt_ast {
  dt_device_t device;
  uint32_t base_addrs[kDtAstRegBlockCount];
  dt_clock_t clocks[kDtAstClockCount];
} dt_ast_t;

#endif  // OPENTITAN_HW_TOP_EARLGREY_SW_AUTOGEN_DEVICETABLES_DT_AST_H_
